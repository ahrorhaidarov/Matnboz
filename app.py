import streamlit as st
from utils import (
    read_and_filter_sentences,
    extract_text_from_pdf,
    extract_text_from_docx
)

st.set_page_config(page_title="–ú–∞—Ç–Ω–±–æ–∑ - –§–∏–ª—Ç—Ä–∫—É–Ω–∏–∏ –º–∞—Ç–Ω“≥–æ", page_icon="üìñ", layout="centered")

# --- CSS Styling ---
st.markdown(
    """
    <style>
    .stButton>button {
        background-color: #4CAF50;
        color: white;
        font-size: 18px;
        padding: 10px 24px;
        border-radius: 10px;
        margin-top: 10px;
    }
    .stTextArea>div>div>textarea {
        background-color: var(--input-bg-color, #000000);
        color: var(--input-text-color, #ffffff);
        border: 2px solid #4CAF50;
        border-radius: 10px;
        padding: 10px;
        font-size: 16px;
        width: 100%;
        min-height: 200px;
    }
    .stTextArea>div>div>textarea:focus {
        outline: none;
        box-shadow: 0 0 5px rgba(76, 175, 80, 0.7);
    }
    :root {
        --bg-color: #f5f7fa;
        --input-bg-color: #ffffff;
        --input-text-color: #000000;
    }
    @media (prefers-color-scheme: dark) {
        :root {
            --bg-color: #0f172a;
            --input-bg-color: #000000;
            --input-text-color: #ffffff;
        }
    }
    </style>
    """,
    unsafe_allow_html=True
)

# --- Init session state ---
for key in ["input_text", "result_text", "filtered_sentences"]:
    st.session_state.setdefault(key, "")
st.session_state.setdefault("uploaded", False)
st.session_state.setdefault("uploader_key", 0)

# --- Title ---
st.title("üìñ –ú–∞—Ç–Ω–±–æ–∑")
st.subheader("üéØ –ë–∞—Ä–Ω–æ–º–∞ –±–∞—Ä–æ–∏ “∑—É–¥–æ –≤–∞ —Ñ–∏–ª—Ç—Ä –∫–∞—Ä–¥–∞–Ω–∏ “∑—É–º–ª–∞“≥–æ –∞–∑ –º–∞—Ç–Ω“≥–æ–∏ PDF, DOCX –≤–∞ –º–∞—Ç–Ω–∏ –¥–∞—Å—Ç”£")

st.write('–ë–æ –∏—Å—Ç–∏—Ñ–æ–¥–∞ –∞–∑ –ú–∞—Ç–Ω–±–æ–∑ —à—É–º–æ –º–µ—Ç–∞–≤–æ–Ω–µ–¥ –º–∞—Ç–Ω–∏ —Ñ–∞–π–ª–∏ PDF —ë DOCX-—Ä–æ —Ö–æ–Ω–¥–∞, —ë –º–∞—Ç–Ω–∏ –¥–∞—Å—Ç”£ –≤–æ—Ä–∏–¥–∫–∞—Ä–¥–∞—Ä–æ –±–∞ “∑—É–º–ª–∞“≥–æ–∏ “∑—É–¥–æ –≤–∞ —Ñ–∏–ª—Ç—Ä—à—É–¥–∞—Ä–æ —Ç–∞–±–¥–∏–ª –¥–∏“≥–µ–¥ –≤–∞ –Ω–∞—Ç–∏“∑–∞“≥–æ—Ä–æ –¥–∞—Ä —à–∞–∫–ª–∏ —Ñ–∞–π–ª (.txt) –∑–∞—Ö–∏—Ä–∞ –∫—É–Ω–µ–¥.')

# --- Upload / Input ---
st.markdown("### üì• –í–æ—Ä–∏–¥ –∫–∞—Ä–¥–∞–Ω–∏ –º–∞—Ç–Ω —ë –±–æ—Ä–∫—É–Ω–∏–∏ —Ñ–∞–π–ª")

uploaded_file = st.file_uploader(
    "üìé –§–∞–π–ª–∏ —Ö—É–¥—Ä–æ (.pdf —ë .docx) –±–æ—Ä –∫—É–Ω–µ–¥:",
    type=["pdf", "docx"],
    key=f"uploader_{st.session_state.uploader_key}"
)

if uploaded_file:
    st.session_state.uploaded = True

# If no file is uploaded, show text input
if not st.session_state.uploaded:
    manual_input = st.text_area("‚úèÔ∏è –Å –º–∞—Ç–Ω–∏ —Ö—É–¥—Ä–æ –¥–∞—Å—Ç”£ –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥:", height=200)

# --- START Processing ---
if st.button("üîç “∂—É–¥–æ–∫—É–Ω–∏–∏ “∂—É–º–ª–∞“≥–æ"):
    if uploaded_file:
        if uploaded_file.type == "application/pdf":
            st.session_state.input_text = extract_text_from_pdf(uploaded_file)
            st.info("üìÑ –ú–∞—Ç–Ω –∞–∑ —Ñ–∞–π–ª–∏ PDF —Ö–æ–Ω–¥–∞ —à—É–¥.")
        elif uploaded_file.type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
            st.session_state.input_text = extract_text_from_docx(uploaded_file)
            st.info("üìÑ –ú–∞—Ç–Ω –∞–∑ —Ñ–∞–π–ª–∏ DOCX —Ö–æ–Ω–¥–∞ —à—É–¥.")
        st.session_state.uploaded = False
    elif not st.session_state.uploaded and 'manual_input' in locals() and manual_input.strip():
        st.session_state.input_text = manual_input
        st.info("üìù –ú–∞—Ç–Ω –∞–∑ —Å–∞“≥—Ñ–∞–∏ –≤–æ—Ä–∏–¥–≥–∞—Ä–¥–∏–¥–∞ —Ö–æ–Ω–¥–∞ —à—É–¥.")
    else:
        st.warning("‚ö†Ô∏è –õ—É—Ç—Ñ–∞–Ω –∞–≤–≤–∞–ª –º–∞—Ç–Ω –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥ —ë —Ñ–∞–π–ª –±–æ—Ä –∫—É–Ω–µ–¥!")

    # Process the input text
    if st.session_state.input_text.strip():
        filtered = read_and_filter_sentences(st.session_state.input_text)
        st.session_state.filtered_sentences = filtered
        st.session_state.result_text = "\n".join(filtered)

# --- Results ---
if st.session_state.filtered_sentences:
    st.markdown("### ‚úÖ “∂—É–º–ª–∞“≥–æ–∏ —Ñ–∏–ª—Ç—Ä—à—É–¥–∞:")
    st.code(st.session_state.result_text, language="text", height=300)

    st.download_button(
        label="‚¨áÔ∏è –ë–æ—Ä–≥–∏—Ä–∏–∏ –Ω–∞—Ç–∏“∑–∞“≥–æ",
        data=st.session_state.result_text.encode("utf-8"),
        file_name="–Ω–∞—Ç–∏“∑–∞.txt",
        mime="text/plain"
    )

    # --- Reset ---
    if st.button("üîÅ –û“ì–æ–∑–∏ –Ω–∞–≤"):
        for key in ["input_text", "result_text", "filtered_sentences"]:
            st.session_state[key] = ""
        st.session_state.uploaded = False
        st.session_state.uploader_key += 1  # force file_uploader to reset
        st.rerun()

# --- Footer ---
st.markdown("---")
st.caption("üöÄ –õ–æ–∏“≥–∞ –∞–∑ “∑–æ–Ω–∏–±–∏ –ê“≥—Ä–æ—Ä“∑–æ–Ω “≤. ‚Ä¢ –ë–∞—Ä–æ–∏ –∑–∞–±–æ–Ω–∏ —Ç–æ“∑–∏–∫”£ üáπüáØ")
st.caption("–ê–ª–æ“õ–∞: alanjon1312@gmail.com")
